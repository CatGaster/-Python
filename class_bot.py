import os
from random import randrange
from datetime import datetime

import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from dotenv import load_dotenv

from class_vk import VK
import db

load_dotenv()

"""–ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º"""

keyboard_main = VkKeyboard(one_time=False)
keyboard_main.add_button(label='–ù–∞–π—Ç–∏ –ø–∞—Ä—É', color=VkKeyboardColor.PRIMARY)
keyboard_main.add_button(label='–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', color=VkKeyboardColor.POSITIVE)
keyboard_main.add_button(label='–í —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', color=VkKeyboardColor.NEGATIVE)
keyboard_main.add_button(label='–ò–∑–±—Ä–∞–Ω–Ω—ã–µ', color=VkKeyboardColor.SECONDARY)


class Bot:

    def __init__(self) -> None:
        self.session = vk_api.VkApi(token=os.getenv('TOKEN_BOT'))
        self.longpoll = VkLongPoll(self.session)
        self.vk_api = VK()
        self.candidate = None
        self.offset = -1
        self.user = None

    def send_msg(self, user_id: int, message=None, keyboard=None, attachment=None):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–æ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç –±–æ—Ç
        """

        responce = self.session.method('messages.send',
                                       {'user_id': user_id,
                                        'message': message,
                                        'random_id': randrange(10 ** 7),
                                        'keyboard': keyboard,
                                        'attachment': attachment,
                                        })
        return responce

    def func_main(self):
        """
        –§—É–Ω–∫—Ü–∏—è-–≤—ã–∑–æ–≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º
        """

        for event in self.longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                request = event.text.lower()
                user_id = event.user_id
                if request == '–ø—Ä–∏–≤–µ—Ç':
                    self.send_first_msg(user_id)
                elif request == '–Ω–∞–π—Ç–∏ –ø–∞—Ä—É':
                    self.offset += 1
                    self.send_candidate_info(user_id)
                elif request == '–≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ':
                    self.add_favorite(user_id)
                elif request == '–≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫':
                    self.add_black_list(user_id)
                elif request == '–∏–∑–±—Ä–∞–Ω–Ω—ã–µ':
                    self.show_favorite(user_id)
                else:
                    self.send_msg(user_id, '–û—à–∏–±–∫–∞! –ù–∞–ø–∏—à–∏ –º–Ω–µ "–ü—Ä–∏–≤–µ—Ç"')

    def send_first_msg(self, user_id: int):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–≤, –≤ –æ—Ç–≤–µ—Ç –Ω–∞ "–ø—Ä–∏–≤–µ—Ç",
        –∞ —Ç–∞–∫ –∂–µ –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """

        # –≤ get_user_info(user_id) –≤–º–µ—Å—Ç–æ user_id, –≤—Å—Ç–∞–≤—å—Ç–µ id –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:
        self.user = self.vk_api.get_user_info(user_id)

        while self.user['city'] is None:
            self.user['city'] = self.get_city(user_id)

        if self.user['age'] is None:
            birth_day = self.get_birthday(user_id)
            this_year = datetime.now()
            while True:
                try:
                    birthday = datetime.strptime(birth_day, '%d.%m.%Y')
                    break
                except ValueError:
                    birth_day = self.get_birthday(user_id)

            age = this_year.year - birthday.year - (
                    (this_year.month, this_year.day) < (birthday.month, birthday.day))
            self.user['age'] = age

        db.add_new_user(self.user['owner_id'],
                        self.user['first_name'],
                        self.user['last_name'],
                        self.user['user_link'])

        name = self.user['first_name']
        msg = f"""–ü—Ä–∏–≤–µ—Ç, {name}! –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–∞—Ä—É ‚ù§Ô∏è.
        –ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–π—Ç–∏ –ø–∞—Ä—É", —è –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞. 
        –ï—Å–ª–∏ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —á–µ–ª–æ–≤–µ–∫ - –Ω–∞–∂–º–∏ "–í –∏–∑–±—Ä–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫" üìî, 
        –Ω–æ –µ—Å–ª–∏ –ø–æ–ª–∞–≥–∞–µ—à—å, —á—Ç–æ –∑–≤–µ–∑–¥—ã –Ω–µ —Å–æ–π–¥—É—Ç—Å—è - –Ω–∞–∂–º–∏ –Ω–∞ "–í —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫" üíî. 
        –ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å - –Ω–∞–∂–º–∏ "–ò–∑–±—Ä–∞–Ω–Ω—ã–µ". 
        –£–¥–∞—á–∏!üòâ """
        keyboard = keyboard_main.get_keyboard()
        response = self.send_msg(user_id, msg, keyboard=keyboard)
        return response

    def send_candidate_info(self, user_id: int):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±–æ—Ç–æ–º –æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–∞—Ö
        """
        while True:
            self.candidate = self.vk_api.search_couple(self.user, self.offset)
            if db.check_users(self.candidate['owner_id']):
                self.candidate = self.vk_api.search_couple(self.user, self.offset)
                db.add_new_user(**self.candidate)
                msg = (f"–ö–∞–∫ —Ç–µ–±–µ? {self.candidate['first_name']} "
                       f"{self.candidate['last_name']}. –í–æ—Ç —Å—Å—ã–ª–∫–∞ "
                       f"–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å - {self.candidate['user_link']}. –ê –≤–æ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: ")
                attachment = self.vk_api.get_photo(self.candidate['owner_id'])
                response = self.send_msg(user_id, msg, attachment=attachment)
            else:
                self.offset += 1
                continue
            return response

    def add_favorite(self, user_id: int):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
        """
        db.add_favorite(self.user, self.candidate)
        response = self.send_msg(user_id, f"{self.candidate['first_name']} "
                                          f"{self.candidate['last_name']} —Ç–µ–ø–µ—Ä—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!")
        return response

    def add_black_list(self, user_id: int):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
        """
        db.add_black_list(self.user, self.candidate)
        response = self.send_msg(user_id, f"{self.candidate['first_name']} "
                                          f"{self.candidate['last_name']} —Ç–µ–ø–µ—Ä—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ!")
        return response

    def show_favorite(self, user_id: int):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ò–∑–±—Ä–∞–Ω–Ω—ã—Ö
        """
        fav_list = db.show_fav_list(self.user)
        message = ''
        count = 1
        if fav_list:
            for fav in fav_list:
                message += f'{count}. {fav[0]} {fav[1]} {fav[2]}\n'
                count += 1
        else:
            message = '–í —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç üòî'
        response = self.send_msg(user_id, f"–í–æ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ "
                                          f"–ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å:\n {message}")
        return response

    def get_city(self, user_id):
        """
        –°–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ
        """
        self.send_msg(user_id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥: ')
        for event in self.longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                city = event.text
                city_id = self.vk_api.get_city_id(city)
                return city_id

    def get_birthday(self, user_id):
        """
        –°–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ
        """
        self.send_msg(user_id, '–í–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ: ')
        for event in self.longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                birthday = event.text
                return birthday
